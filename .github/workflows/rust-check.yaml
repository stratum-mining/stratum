on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  msrv:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - 1.75.0 # MSRV

    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1.2.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build Projects
        run: ./scripts/workflows/build.sh

  semver:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - run: sudo apt-get update && sudo apt-get install -y cmake
      - run: cargo install cargo-semver-checks --version 0.37.0 --locked
      - name: Run Semver Checks
        run: ./scripts/workflows/semver.sh

  fmt:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Run fmt in different workspaces and crates
        run: ./scripts/workflows/format.sh

  clippy-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.75.0
          override: true
          components: clippy
      - name: Run Clippy on different workspaces and crates
        run: ./scripts/workflows/clippy.sh

  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-13
          - ubuntu-latest
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set OS environment variable
        run: echo "CI_OS=${{ matrix.os }}" >> $GITHUB_ENV

      - name: Run CI script
        run: ./scripts/workflows/test.sh
        working-directory: .

  ci-example:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-13
          - ubuntu-latest
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set OS environment variable
        run: echo "CI_OS=${{ matrix.os }}" >> $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run examples script
        run: ./scripts/workflows/example.sh
        working-directory: .
