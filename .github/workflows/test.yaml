on:
  pull_request:
    branches:
      - main

name: Test, Prop Tests, Example Tests

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-13
          - ubuntu-latest
        include:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - name: Install stable toolchain & components
        uses: actions/checkout@v4
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        run: |
          cargo build --manifest-path=benches/Cargo.toml
          cargo build --manifest-path=common/Cargo.toml
          cargo build --manifest-path=protocols/Cargo.toml
          cargo build --manifest-path=roles/Cargo.toml
          cargo build --manifest-path=utils/Cargo.toml
          cargo build --manifest-path=roles/roles-utils/config-helpers/Cargo.toml

      - name: Run sv1-client-and-server example
        run: |
          cargo run --manifest-path=protocols/v1/Cargo.toml --example client_and_server 30

      - name: interop-test
        run: |
          if [ ${{ matrix.os }} == "ubuntu-latest" ]; then
            ./run.sh 30
          else
            echo "Skipping interop-test on ${{ matrix.os }} - not supported"
          fi
        working-directory: examples/interop-cpp/

          # TODO this is only usefull if we want to build c bindings with guix
          #- name: interop-no-cargo-test
          #  run: |
          #    if [ ${{ matrix.os }} == "ubuntu-latest" ]; then
          #      ./run.sh 30
          #    else
          #      echo "Skipping interop-test on ${{ matrix.os }} - not supported"
          #    fi
          #  working-directory: examples/interop-cpp-no-cargo/

      - name: fuzz tests
        run: |
          if [ ${{ matrix.os }} == "ubuntu-latest" ]; then
            ./run.sh 30
          else
            echo "Skipping fuzz test on ${{ matrix.os }} - not supported"
          fi
        working-directory: utils/buffer/fuzz

      - name: Test
        run: |
          cargo test --manifest-path=benches/Cargo.toml
          cargo test --manifest-path=common/Cargo.toml
          cargo test --manifest-path=protocols/Cargo.toml
          # Integration tests are run in a separate job
          cargo test --manifest-path=roles/Cargo.toml --workspace --exclude integration_tests_sv2
          cargo test --manifest-path=utils/Cargo.toml
          cargo test --manifest-path=roles/roles-utils/config-helpers/Cargo.toml

      - name: Property based testing
        run: |
          cargo test --manifest-path=protocols/Cargo.toml --features prop_test

      - name: Run ping-pong-encrypted example
        run: |
          cargo run --manifest-path=examples/ping-pong-encrypted/Cargo.toml

      - name: Run ping-pong example
        run: |
          cargo run --manifest-path=examples/ping-pong/Cargo.toml
